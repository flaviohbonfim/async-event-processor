version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 10s
      retries: 10

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10

  fastapi_app:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy

  aio_pika_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: poetry run python -m app.worker --queue validation_queue,dispatch_queue,status_update_queue,email_queue,sms_queue,push_queue,whatsapp_queue
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASS: guest
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      fastapi_app:
        condition: service_started

volumes:
  rabbitmq_data:
  redis_data:
